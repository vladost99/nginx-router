user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;
    
    # Define resolver for Docker's internal DNS
    resolver 127.0.0.11 valid=30s;
    
    server {
        listen 80;
        
        # Frontend application (main site)
        location / {
            set $frontend_upstream ${FRONTEND_CONTAINER}:${FRONTEND_PORT};
            proxy_pass http://$frontend_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Frontend page application
        location /browsing-journal/ {
            set $frontend_page_upstream ${FRONTEND_PAGE_CONTAINER}:${FRONTEND_PAGE_PORT};
            rewrite ^/browsing-journal(/.*)$ $1 break;
            proxy_pass http://$frontend_page_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Backend API
        location /browsing-api/ {
            set $backend_api_upstream ${BACKEND_API_CONTAINER}:${BACKEND_API_PORT};
            rewrite ^/browsing-api/(.*) /api/$1 break;
            proxy_pass http://$backend_api_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
} 